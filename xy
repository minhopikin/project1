CREATE OR REPLACE FUNCTION payment.insert_into_ram_temp_humana_prta_for_humoh(
    i_seqpaymentheaderid integer,
    i_planname character varying)
RETURNS void
LANGUAGE 'plpgsql'
AS $$
BEGIN
    WITH payment_data AS (
        SELECT 
            rpht.mbr_pid, 
            rpt_pe, 
            mco_ctrct, 
            pbp, 
            SUBSTRING(CAP_CTRCT, 1, position(' ' in CAP_CTRCT) - 1) AS provider_id, 
            CAST(CAST(rpht.MBR_CAP_BD AS DATE) + n.nbr * interval '1 month' AS DATE) AS cap_period,
            SUM(rpht.fund1_rte) AS fund1_rte,
            SUM(rpht.fund2_rte) AS fund2_rte,
            SUM(rpht.fund4_rte) AS fund4_rte,
            SUM(rpht.fund5_rte) AS fund5_rte,
            SUM(rpht.fund6_rte) AS fund6_rte,
            SUM(prta1_pct + prta2_pct + prta3_pct + prta4_pct + prta5_pct + prta6_pct) AS prta_pct,
            SUM(prtb1_pct + prtb2_pct + prtb3_pct + prtb4_pct + prtb5_pct + prtb6_pct) AS prtb_pct
        FROM payment.ram_payment_humana_temp rpht
        INNER JOIN payment.ram_temp_humana_nums n 
            ON CAST(rpht.MBR_CAP_BD AS DATE) + n.nbr * interval '1 month' <= CAST(rpht.MBR_CAP_ED AS DATE)
        WHERE rpht.seq_payment_header_id = i_seqpaymentheaderid 
            AND rpht.plan_name = i_planname 
            AND rpht.pgm_source = 'P'
        GROUP BY rpht.mbr_pid, rpt_pe, mco_ctrct, pbp, provider_id, cap_period
    ),
    details_data AS (
        SELECT DISTINCT ON (rpht.mbr_pid, rpt_pe, mco_ctrct, pbp, provider_id, cap_period)
            rpht.mbr_pid, 
            rpt_pe, 
            mco_ctrct, 
            pbp, 
            SUBSTRING(CAP_CTRCT, 1, position(' ' in CAP_CTRCT) - 1) AS provider_id,
            rpht.MBR_CAP_BD,
            rpht.MBR_CAP_ED,
            rpht.CUR_MBRMO,
            rpht.RETRO_ADD,
            rpht.RETRO_TRM,
            rpht.PROV_NM,
            rpht.PREM_PRTA,
            rpht.PREM_PRTB,
            rpht.PREM_PRTD,
            rpht.PREM_REI,
            rpht.CAP_CTRCT,
            rpht.GROUPER,
            rpht.PGM_SOURCE,
            rpht.MBR_CUS_ID,
            rpht.CTRCT_PRTB,
            rpht.CTRCT_PRTD,
            rpht.STATUS,
            rpht.RUN_DATE,
            rpht.PROD_LOB,
            rpht.mbr_nm,
            rpht.mbr_sex,
            rpht.ret_reason,
            rpht.CTRCT_PRTA,
            rpht.mbr_age,
            rpht.MBR_ID,
            rpht.cur_cap_sw,
            rpht.ret_cap_sw,
            rpht.PREM_LIS,
            rpht.UHG_CDO_ID,
            rpht.UHG_REGION_ID
        FROM payment.ram_payment_humana_temp rpht
        WHERE rpht.seq_payment_header_id = i_seqpaymentheaderid 
            AND rpht.plan_name = i_planname 
            AND rpht.pgm_source = 'P'
    )
    INSERT INTO payment.ram_temp_humana_combined ( 
        memberid, cap_period, CAP_PROC_MONTH, MBR_CAP_Start_Date, MBR_CAP_End_Date, 
        CUR_MBRMO, RETRO_ADD, RETRO_TRM, Entity, HealthPlan, PRODUCT, MCO_CTRCT, 
        PBP, Provider_Id, PROV_NM, MM, PRTC_Fund_RTE, PRTA_FUND_RTE, PRTB_Fund_RTE, 
        PRTD_FUND_RTE, Total_FP, mbr_nm, mbr_sex, ret_reason, CTRCT_PRTA, mbr_age, 
        MBR_ID, cur_cap_sw, ret_cap_sw, CMS_PRTA, CMS_PRTB, CMS_PRTD, 
        REINSURANCE_SUBSIDY_AMOUNT, CAP_CTRCT, GROUPER, PGM_SOURCE, MBR_CUS_ID, 
        CTRCT_PRTB, CTRCT_PRTD, STATUS, RUN_DATE, PROD_LOB, PRTA_PCT, PRTB_PCT, 
        PLAN_NAME, seq_payment_header_id, SEQ_HUMANA_ID, PREM_LIS, UHG_CDO_ID, 
        UHG_REGION_ID
    )
    SELECT 
        pd.mbr_pid, pd.cap_period, CAST(pd.rpt_pe AS DATE), 
        CAST(dd.MBR_CAP_BD AS DATE), CAST(dd.MBR_CAP_ED AS DATE),
        dd.CUR_MBRMO, dd.RETRO_ADD, dd.RETRO_TRM,
        'OCN', 'Humana',
        CASE 
            WHEN dd.PROD_LOB = 'MEP' THEN 'LPPO'
            WHEN dd.PROD_LOB = 'MEF' THEN 'PFFS'
            WHEN dd.PROD_LOB = 'MER' THEN 'HMO'
            WHEN dd.PROD_LOB = 'MRO' THEN 'HMO'
            ELSE NULL 
        END,
        pd.mco_ctrct, pd.pbp, pd.provider_id, dd.PROV_NM,
        CASE 
            WHEN dd.CUR_MBRMO > 0 THEN 1 
            WHEN dd.RETRO_ADD > 0 THEN 1 
            WHEN dd.RETRO_TRM < 0 THEN -1 
            ELSE 0 
        END,
        COALESCE(pd.fund4_rte, 0) + COALESCE(pd.fund5_rte, 0), 
        COALESCE(pd.fund1_rte, 0) + COALESCE(pd.fund2_rte, 0) + COALESCE(pd.fund5_rte, 0),
        COALESCE(pd.fund4_rte, 0), COALESCE(pd.fund6_rte, 0), 
        COALESCE(pd.fund1_rte, 0) + COALESCE(pd.fund2_rte, 0) + COALESCE(pd.fund5_rte, 0) + 
        COALESCE(pd.fund4_rte, 0) + COALESCE(pd.fund6_rte, 0),
        dd.mbr_nm, dd.mbr_sex, dd.ret_reason, dd.CTRCT_PRTA, 
        dd.mbr_age, dd.MBR_ID, dd.cur_cap_sw, dd.ret_cap_sw,
        ROUND(dd.PREM_PRTA, 2), ROUND(dd.PREM_PRTB, 2), ROUND(dd.PREM_PRTD, 2), 
        dd.PREM_REI, dd.CAP_CTRCT, dd.GROUPER, dd.PGM_SOURCE, dd.MBR_CUS_ID, 
        dd.CTRCT_PRTB, dd.CTRCT_PRTD, dd.STATUS, dd.RUN_DATE, dd.PROD_LOB, 
        pd.prta_pct, pd.prtb_pct, i_planname, i_seqpaymentheaderid, 
        nextval('payment.SEQ_HUMANA_ID'), dd.PREM_LIS, dd.UHG_CDO_ID, dd.UHG_REGION_ID
    FROM payment_data pd
    JOIN details_data dd 
    ON pd.mbr_pid = dd.mbr_pid 
        AND pd.rpt_pe = dd.rpt_pe 
        AND pd.mco_ctrct = dd.mco_ctrct 
        AND pd.pbp = dd.pbp 
        AND pd.provider_id = dd.provider_id 
        AND pd.cap_period BETWEEN CAST(dd.MBR_CAP_BD AS DATE) AND CAST(dd.MBR_CAP_ED AS DATE);
END;
$$;
