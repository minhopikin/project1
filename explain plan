INSERT
	INTO
	membership.RAM_ELIGIBILITY_FILE_ERROR (SEQ_ELIG_FILE_ID,
	RECORD_TYPE,
	SUBSCRIBER_ID,
	PERSON_NUMBER,
	EFFECTIVE_DATE,
	TERM_DATE,
	SOURCE_SEQ_MEMBER_ID,
	SOURCE_SEQ_ELIG_HIST,
	PLAN_NAME,
	COMPANY_CODE,
	ELIG_STATUS,
	PLAN_CODE,
	GROUP_ID,
	GROUP_NAME,
	PRODUCT_ID,
	PRODUCT_DESC,
	PLAN_BENEFIT_PKG,
	PLAN_BENEFIT_PKG_DESC,
	PCP_PROVIDER_ID_TIN,
	PCP_EFFECTIVE_DATE,
	PCP_PROVIDER_TYPE_CODE,
	PCP_TERM_DATE,
	MEDICARE_CONTRACT_CODE,
	MEM_CURRENT_ELIG_FLAG,
	COUNTY_CODE,
	LINE_OF_BUSINESS,
	PROD_GROUP,
	INSERT_DATE,
	LAST_UPDATE_DATE,
	USER_DEFINED_1,
	USER_DEFINED_2,
	USER_DEFINED_3,
	USER_DEFINED_4,
	USER_DEFINED_5,
	USER_DEFINED_6,
	USER_DEFINED_7,
	USER_DEFINED_8,
	USER_DEFINED_9,
	USER_DEFINED_10,
	USER_DATE_1,
	USER_DATE_2,
	USER_DATE_3,
	USER_DATE_4,
	USER_DATE_5,
	USER_DATE_6,
	USER_DATE_7,
	USER_DATE_8,
	USER_DATE_9,
	USER_DATE_10,
	INSERT_DATETIME,
	UPDATE_DATETIME,
	INSERT_PROCESS,
	INSERT_USER,
	UPDATE_USER,
	UPDATE_PROCESS,
	ERROR_REASON) (
	SELECT
		elig1.SEQ_ELIG_FILE_ID,
		elig1.RECORD_TYPE,
		elig1.SUBSCRIBER_ID,
		elig1.PERSON_NUMBER,
		to_char(elig1.EFFECTIVE_DATE,
		'MMDDYYYY'),
		to_char(elig1.TERM_DATE,
		'MMDDYYYY'),
		elig1.SOURCE_SEQ_MEMBER_ID,
		elig1.SOURCE_SEQ_ELIG_HIST,
		elig1.PLAN_NAME,
		elig1.COMPANY_CODE,
		elig1.ELIG_STATUS,
		elig1.PLAN_CODE,
		elig1.GROUP_ID,
		elig1.GROUP_NAME,
		elig1.PRODUCT_ID,
		elig1.PRODUCT_DESC,
		elig1.PLAN_BENEFIT_PKG,
		elig1.PLAN_BENEFIT_PKG_DESC,
		elig1.PCP_PROVIDER_ID_TIN,
		to_char(elig1.PCP_EFFECTIVE_DATE,
		'YYYY-MM-DD HH:MI:SS.MS'),
		elig1.PCP_PROVIDER_TYPE_CODE,
		TO_CHAR(elig1.PCP_TERM_DATE,
		'YYYY-MM-DD HH:MI:SS.MS'),
		elig1.MEDICARE_CONTRACT_CODE,
		elig1.MEM_CURRENT_ELIG_FLAG,
		elig1.COUNTY_CODE,
		elig1.LINE_OF_BUSINESS,
		elig1.PROD_GROUP,
		to_char(elig1.INSERT_DATE,
		'MMDDYYYY'),
		to_char(elig1.LAST_UPDATE_DATE,
		'MMDDYYYY'),
		elig1.USER_DEFINED_1,
		elig1.USER_DEFINED_2,
		elig1.USER_DEFINED_3,
		elig1.USER_DEFINED_4,
		elig1.USER_DEFINED_5,
		elig1.USER_DEFINED_6,
		elig1.USER_DEFINED_7,
		elig1.USER_DEFINED_8,
		elig1.USER_DEFINED_9,
		elig1.USER_DEFINED_10,
		elig1.USER_DATE_1,
		elig1.USER_DATE_2,
		elig1.USER_DATE_3,
		elig1.USER_DATE_4,
		elig1.USER_DATE_5,
		elig1.USER_DATE_6,
		elig1.USER_DATE_7,
		elig1.USER_DATE_8,
		elig1.USER_DATE_9,
		elig1.USER_DATE_10,
		elig1.INSERT_DATETIME,
		elig1.UPDATE_DATETIME,
		elig1.INSERT_PROCESS,
		elig1.INSERT_USER,
		elig1.UPDATE_USER,
		elig1.UPDATE_PROCESS,
		'ERROR:Multiple Subscriber ID for Alternate ID'
	FROM
		membership.RAM_ELIGIBILITY_FILE_DATA elig1
	JOIN membership.RAM_DEMOGRAPHICS_FILE_DATA demo1 ON
		elig1.subscriber_id = demo1.subscriber_id
		AND elig1.plan_name = demo1.plan_name
	JOIN (
		SELECT
			elig2.subscriber_id,
			demo2.alternate_id
		FROM
			membership.ram_eligibility_file_data elig2
		JOIN membership.ram_demographics_file_data demo2 ON
			elig2.plan_name = $1
			AND elig2.PLAN_NAME = demo2.PLAN_NAME
			AND elig2.subscriber_id = demo2.subscriber_id
			AND elig2.elig_status <> 'V') AS file_data ON
		file_data.subscriber_id <> elig1.subscriber_id
		AND file_data.alternate_id = demo1.alternate_id
	WHERE
		elig1.elig_status <> 'V'
		AND elig1.plan_name = $2
		AND elig1.subscriber_id NOT IN (
		SELECT
			subscriber_id
		FROM
			membership.ram_eligibility_file_error
		WHERE
			error_reason = 'ERROR:Multiple Subscriber ID for Alternate ID'))
